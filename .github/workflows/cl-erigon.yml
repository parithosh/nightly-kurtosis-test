name: Scheduled cl-erigon majority testnets
on:
 workflow_dispatch:
 schedule:
   - cron: '0 10 * * *'

env:
    TEKU_IMAGE: "consensys/teku"
    NIMBUS_IMAGE: "parithoshj/nimbus"
    PRYSM_BEACON_IMAGE: "gcr.io/prysmaticlabs/prysm/beacon-chain"
    PRYSM_VALIDATOR_IMAGE: "gcr.io/prysmaticlabs/prysm/validator"
    LIGHTHOUSE_IMAGE: "sigp/lighthouse:latest-unstable"
    LODESTAR_IMAGE: "chainsafe/lodestar:next"
    ERIGON_IMAGE: "parithoshj/erigon"
    NETHERMIND_IMAGE: "nethermind/nethermind"
    GETH_IMAGE: "parithoshj/geth"
jobs:
  kurtosis:
    name: kurtosis
    runs-on: kurtosis
    # Increase timeout if we add more difficult tests that take longer!
    timeout-minutes: 300
    steps:
      - name: Checkout this repo
        uses: actions/checkout@master
      - name: fetch image name
        id: fetch_image_name
        shell: bash
        run: |
          echo "::set-output name=erigon_image::$(./fetch-latest-image-tags.sh ${{ env.ERIGON_IMAGE }})"
          echo "::set-output name=enclave_name::majority-erigon"
          echo "::set-output name=geth_image::$(./fetch-latest-image-tags.sh ${{ env.GETH_IMAGE }})"
          echo "::set-output name=nimbus_image::$(./fetch-latest-image-tags.sh ${{ env.NIMBUS_IMAGE }})"
          echo "::set-output name=prysm_image::$(./return-cl-image-info.sh prysm)"
          echo "::set-output name=lighthouse_image::$(./return-cl-image-info.sh lighthouse)"
          echo "::set-output name=lodestar_image::$(./return-cl-image-info.sh lodestar)"
          echo "::set-output name=teku_image::$(./return-cl-image-info.sh teku)"
          echo "::set-output name=geth_image::$(./fetch-latest-image-tags.sh ${{ env.GETH_IMAGE }})"
          echo "::set-output name=kurtosis_image_name::$(./return-cl-image-info.sh kurtosis)"
      - name: Render Deployment YAML
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: ./cl-erigon.json.j2
          output_file: ./$majority-erigon.json
          strict: true
          data_format: json
        env:
          ERIGON_IMAGE: ${{ steps.fetch_image_name.outputs.erigon_image }}
          TEKU_IMAGE: ${{ steps.fetch_image_name.outputs.teku_image }}
          NIMBUS_IMAGE: ${{ steps.fetch_image_name.outputs.nimbus_image }}
          PRYSM_IMAGE: ${{ steps.fetch_image_name.outputs.prysm_image }}
          LIGHTHOUSE_IMAGE: ${{ steps.fetch_image_name.outputs.lighthouse_image }}
          LODESTAR_IMAGE: ${{ steps.fetch_image_name.outputs.lodestar_image }}
          GETH_IMAGE: ${{ steps.fetch_image_name.outputs.geth_image }}
      - name: Run kurtosis with the config
        run: kurtosis module exec --enclave-id ${{ steps.fetch_image_name.outputs.enclave_name }} ${{ steps.fetch_image_name.outputs.kurtosis_image_name }} --execute-params "$(cat ./majority-erigon.json)"
      - name: Run kurtosis with the config
        if: always()
        run: kurtosis enclave dump ${{ steps.fetch_image_name.outputs.enclave_name }} ${{ steps.fetch_image_name.outputs.enclave_name }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ steps.fetch_image_name.outputs.enclave_name }}
          path: ./${{ steps.fetch_image_name.outputs.enclave_name }}
      - name: Cleanup
        if: always()
        run: kurtosis enclave rm ${{ steps.fetch_image_name.outputs.enclave_name }} --force
